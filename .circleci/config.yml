# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS
#
version: 2.1
jobs:
  lint-vet-fmt:
    docker:
      - image: debian:bookworm
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y golang build-essential git ca-certificates libltdl-dev
      - checkout
      - run:
          name: check crypto11 not used in signers
          command: |
            make check-no-crypto11-in-signers
            make show-lints
      - run:
          name: run golint
          command: |
            make install-golint lint
            make show-lints
            make -C tools/autograph-monitor lint
            make -C verifier/contentsignature lint
      - run:
          name: run gofmt
          command: |
            make -s fmt-diff | tee fmt.diff
            test -z "$(cat fmt.diff)"
      - run:
          name: run go vet
          command: |
            make vet
            make -C tools/autograph-monitor vet
            make -C verifier/contentsignature vet 
      - run:
          name: run staticcheck
          command: |
            make install-staticcheck staticcheck
            make show-lints
            make -C tools/autograph-monitor staticcheck
            make -C verifier/contentsignature staticcheck

  unit-test:
    # based on the official golang image with more docker stuff
    docker:
      - image: cimg/base:2024.06
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - checkout
      - setup_remote_docker
      - run:
          name: create version.json and other autogenerated files
          command: make generate
      - run:
          name: build unit-test docker images
          command: |
            docker compose build --no-cache unit-test
      - run:
          name: run unit-test docker image and report coverage
          command: |
            docker compose run unit-test

  build-integrationtest-verify:
    # based on the official golang image with more docker stuff
    docker:
      - image: cimg/base:2024.06
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - checkout
      - setup_remote_docker
      - run:
          name: create version.json and other autogenerated files then build docker images
          command: make generate build
      - run:
          name:
          command: make integration-test
      # save the built docker container to CircleCI's cache since
      # CircleCI Workflows do not have the same remote docker
      # instance.
      - run:
          name: docker save built images
          no_output_timeout: 30m
          command: |
            mkdir -p docker-cache
            docker save "autograph-app" | gzip -c > docker-cache/autograph-app.tgz
      - save_cache:
          key: v4-{{ .Branch }}-{{ epoch }}
          paths:
            - docker-cache/

  deploy:
    docker:
      - image: cimg/deploy:2024.03.1
    steps:
      - setup_remote_docker
      - restore_cache:
          key: v4-{{.Branch}}
      - run:
          name: Restore Docker image cache
          command: gunzip -c docker-cache/autograph-app.tgz | docker load

      - run:
          name: Deploy to Dockerhub
          command: |
            # deploy main
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag autograph-app ${DOCKERHUB_REPO}:latest
              docker push ${DOCKERHUB_REPO}:latest
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # deploy a release tag...
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker tag autograph-app "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
            fi

workflows:
  version: 2
  check-code-quality:
    jobs:
      - lint-vet-fmt:
          filters:
            tags:
              only: /.*/

      - unit-test:
          filters:
            tags:
              only: /.*/

  build-integrationtest-verify-deploy:
    jobs:
      - build-integrationtest-verify:
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - build-integrationtest-verify
          filters:
            tags:
              # only upload the docker container on semver tags
              only: /[0-9]\.[0-9]+\.[0-9]+/
            branches:
              only: main
  nightly:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only: main
    jobs:
      - lint-vet-fmt
      - unit-test
      - build-integrationtest-verify
