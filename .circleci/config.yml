# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS
#
version: 2.1
jobs:
  lint-vet-fmt:
    docker:
      # If you adjust this version, also adjust the GOLANGCI_LINT_VERSION in the
      # Makefile
      - image: golangci/golangci-lint:v1.60.1-alpine
    steps:
      - checkout
      - run: golangci-lint run

  unit-test:
    # based on the official golang image with more docker stuff
    docker:
      - image: cimg/go:1.22
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - checkout
      - setup_remote_docker
      - run:
          name: create version.json and other autogenerated files
          command: make generate
      - run:
          name: build unit-test docker images
          command: |
            docker compose build --no-cache unit-test
      - run:
          name: run unit-test docker image and report coverage
          command: |
            docker compose run unit-test

  build-integrationtest-verify:
    # based on the official golang image with more docker stuff
    docker:
      - image: cimg/go:1.22
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - checkout
      - setup_remote_docker
      - run:
          name: create version.json and other autogenerated files then build docker images
          command: make generate build
      - run:
          name:
          command: make integration-test
      # save the built docker container to CircleCI's cache since
      # CircleCI Workflows do not have the same remote docker
      # instance.
      - run:
          name: docker save built images
          no_output_timeout: 30m
          command: |
            mkdir -p docker-cache
            docker save "autograph-app" | gzip -c > docker-cache/autograph-app.tgz
      - save_cache:
          key: v4-{{ .Branch }}-{{ epoch }}
          paths:
            - docker-cache/

workflows:
  version: 2
  check-code-quality:
    jobs:
      - lint-vet-fmt:
          filters:
            tags:
              only: /.*/

      - unit-test:
          filters:
            tags:
              only: /.*/

  build-integrationtest-verify-deploy:
    jobs:
      - build-integrationtest-verify:
          filters:
            tags:
              only: /.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only: main
    jobs:
      - lint-vet-fmt
      - unit-test
      - build-integrationtest-verify
